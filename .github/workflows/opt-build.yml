# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Modified Check Code.
jobs:
  spotless-check:
    name: spotless-check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-spotless-check.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/chunjun/chunjun', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true
    - run: touch optcd-3.txt
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: temurin
        cache: maven
    - run: touch optcd-4.txt
    - name: Spotless Check
      run: |-
        ./mvnw spotless:check
    - run: touch optcd-5.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-spotless-check
        path: /home/runner/inotifywait-log-spotless-check.csv
  build:
    name: build
    needs:
    - spotless-check
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/chunjun/chunjun', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: temurin
        cache: maven
    - run: touch optcd-4.txt
    - name: add dependencies
      run: |-
        wget http://nexus.dev.dtstack.cn/nexus/content/repositories/dtstack-release/com/esen/jdbc/gbase/8.3.81.53/gbase-8.3.81.53.jar
        wget https://cdn.gbase.cn/products/27/czrl6z38BvTfEQS4uyQcS/gbasedbtjdbc_3.5.1.jar
        ./mvnw install:install-file -DgroupId=com.esen.jdbc -DartifactId=gbase -Dversion=8.3.81.53 -Dpackaging=jar -Dfile=./gbase-8.3.81.53.jar
        ./mvnw install:install-file -DgroupId=com.gbasedbt.jdbc.Driver -DartifactId=gbasedbt -Dversion=3.5.1_1_d0c87a -Dpackaging=jar -Dfile=./gbasedbtjdbc_3.5.1.jar
    - run: touch optcd-5.txt
    - name: build project
      run: |-
        ./mvnw clean package -Dmaven.test.skip --no-snapshot-updates
    - run: touch optcd-6.txt
    - name: unit-test
      run: |-
        ./mvnw -T 1C clean compile test -DskipUT=false -DskipITCase=false --no-snapshot-updates
    - run: touch optcd-7.txt
    - name: integration-test
      run: |-
        ./mvnw -T 1C -B verify -DskipUT=true -DskipIT=false --no-snapshot-updates -pl chunjun-e2e -am
      env:
        MAVEN_OPTS: -Xmx2048m
    - run: touch optcd-8.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build
        path: /home/runner/inotifywait-log-build.csv
'on':
- push
- workflow_dispatch
